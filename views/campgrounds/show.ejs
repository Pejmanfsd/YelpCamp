<!-- Step 15(H): Remove all the fix parts and add the following line -->
<% layout('layouts/boilerplate') %>
    <!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Show</title>
</head>

<body> -->
    <!-- Step 41(B): including the "stars.css" file: -->
    <link rel="stylesheet" href="/stylesheets/stars.css">
    <!-- Step 20(F): Create a <div> tag with a "row" class and
    another <div> tag with the offset of 3 (which will be removed later): -->
    <div class="row">
        <div class="col-6">
            <!-- Step 20(G): Bootstrap website -> (the menu on the left) components
    -> Card -> copy the codes of the "kitchen sink" section and paste them here
    make the necessary changes by using the codes of the previous version -->
            <div class="card mb-3">
                <!-- Step 42(K): Looping through all the images (in case a campground has more than one image) -->
                <% for(let img of campground.images) { %>
                    <img src="<%= img.url %>" class="card-img-top" alt="...">
                    <% } %>
                        <img src="<%= campground.image %>" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title">
                                <%= campground.title %>
                            </h5>
                            <p class="card-text">
                                <%= campground.description %>
                            </p>
                        </div>
                        <ul class="list-group list-group-flush">
                            <!-- Step 36(D): Adding the author of campgrounds to UI -->
                            <li class="list-group-item">
                                Submitted by: <%= campground.author.username %>
                            </li>
                            <li class="list-group-item text-muted">
                                <%= campground.location %>
                            </li>
                            <li class="list-group-item">
                                $ <%= campground.price %> / night
                            </li>

                        </ul>
                        <!-- Step 20(H): Put the "Edit" button and the "Delete" button: -->
                        <!-- Step 37(A): We want the Edit/Delete buttons to be visible only for the author of the campground -->
                        <% if (currentUser && campground.author.equals(currentUser._id)) { %>
                            <!-- Only show the buttons if the user is logged-in and their id is equal to the id of the
                    author of the campground (the "author" field of the userSchema is actually the id of the author) -->
                            <div class="card-body">
                                <a class="card-link btn btn-info"
                                    href="/campgrounds/<%= campground._id %>/edit">Edit</a>
                                <form class="d-inline" action="/campgrounds/<%= campground._id %>?_method=DELETE"
                                    method="POST">
                                    <!-- The "action" attribute connects this button to the delete route in "app.js" -->
                                    <button class="btn btn-danger">Delete</button>
                                </form>
                            </div>
                            <% } %> <!-- But now if we add "/edit" at the end of the URL in the campground's page,
                    we still can edit the campground, even if we're not the author, so we should protect the route -->
            </div>
            <!-- Step 20(I): For the last link of the page (All Campgrounds) :
            Bootstrap website -> (in the right menu) Header and footer -> Copy
            the codes above the "Sizing" section and paste them in the "card" section -->
            <div class="card text-center">
                <div class="card-footer text-muted">
                    <a href="/campgrounds">All Campgrounds</a>
                </div>
            </div>
        </div>
        <div class="col-6">
            <!-- Step 38(B): Hiding the form for the users who aren't logged-in: -->
            <% if (currentUser) { %>
                <h2>Leave a Review</h2>
                <!-- Step 26(C): Creating the form of commenting and rating -->
                <form action="/campgrounds/<%= campground._id %>/reviews" method="POST" class="mb-3 validated-form"
                    novalidate>
                    <!-- Step 26(G): Adding "novalidate" attribute and the "validated-form" class (from "boilerplate.ejs" file) for the <form> tag -->
                    <!-- The action attribute is updated after creating the route in app.js.
                "campground" is already passed to this page -->
                    <!-- <div class="mb-3"> -->
                    <!-- Bootstrap5 website -> left menu -> Forms -> Range -> Overview part:
                    we can find the "form-label" class for the <label> tag
                    and "form-range" class for the <input> tag: -->
                    <!-- <label class="form-label" for="rating">Rating</label>
                        <input class="form-range" type="range" min="1" max="5" name="review[rating]" id="rating">
                    </div> -->
                    <!-- Step 41(D): For making the user's voting rating star, create a <mb-3> tag,
                    go to starability website (https://github.com/LunarLogic/starability)
                    in the "How to use" section copy the first <fieldset> tag and paste it here and
                    comment the old version of the navbar rating: -->
                    <div class="mb-3">
                        <fieldset class="starability-basic">
                            <!-- Change the value of the "name" attribute from "rating" to "review[rating]"
                             and set the default value to "1" -->
                            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1"
                                checked aria-label="No rating." />
                            <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                            <label for="first-rate1" title="Terrible">1 star</label>
                            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                            <label for="first-rate2" title="Not good">2 stars</label>
                            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                            <label for="first-rate3" title="Average">3 stars</label>
                            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                            <label for="first-rate4" title="Very good">4 stars</label>
                            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                            <label for="first-rate5" title="Amazing">5 stars</label>
                        </fieldset>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="body">Review</label>
                        <textarea class="form-control" name="review[body]" id="body" cols="30" rows="3"
                            required></textarea>
                        <!-- Step 26(F): We're validating the "review" section; users shouldn't be able to submit an empty review.
                    The first step is to add "required" in the <textarea> tag -->
                        <!-- Step 26(H): Adding the validation feedback -->
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                        <!-- Now if we fill the textbox, we'll see the "Looks good!" message -->
                    </div>
                    <button class="btn btn-success">Submit</button>
                </form>
                <% } %>
                    <!-- Step 26(P): Looping all over the reviews -->
                    <% for(let review of campground.reviews) { %>
                        <div class="card mb-3">
                            <div class="card-body">
                                <!-- <h5 class="card-title">
                                    Rating: %= review.rating %>
                                </h5> -->
                                <!-- Step 38(E): For displaying the author of each review, first we use the "card-subtitle"
                                tag (bootstrap 5 website -> Components -> Card -> Card subtitle) and according to the nested
                                populate, we fetch the username of the author (later we change it to "card-title"): -->
                                <h6 class="card-title">
                                    <%= review.author.username %>
                                </h6>
                                <p class="card-text">
                                    Review: <%= review.body %>
                                </p>
                                <!-- Step 41(C): in the "starability" website (https://github.com/LunarLogic/starability)
                                search for "Showing the static rating result", copy the codes of the <p> tag and paste
                                them here and make the number of stars dynamic: -->
                                <p class="starability-result" data-rating="<%= review.rating %>">
                                    Rated: <%= review.rating %> stars
                                </p>
                                <!-- Step 26(R): Creating the delete button in a from -->
                                <!-- Step 38(F): We want to show the Delete button only to the owner of the review
                                Show the button only if the user is logged-in and(&&) the id of the user is equal to the author
                                of the review (wich actually is the "id" of the author) -->
                                <% if (currentUser && review.author.equals(currentUser._id)) { %>
                                    <form
                                        action="/campgrounds/<%= campground._id %>/reviews/<%= review._id %>?_method=DELETE"
                                        method="POST">
                                        <button class="btn btn-sm btn-danger">Delete</button>
                                    </form>
                                    <% } %>
                            </div>
                        </div>
                        <% } %>
        </div>
    </div>
    <!-- Step 20(J): Delete/Comment the old-version codes -->
    <!-- <h1>
        Title: %= campground.title %>
    </h1>
    <h2>
        Location: %= campground.location %>
    </h2> -->
    <!-- Step 19(C): Adding the new fields -->
    <!-- <img src="%= campground.image %>" alt="">
    <p>
        Description: %= campground.description %>
    </p>
    <p>
        Price: %= campground.price %>
    </p>
    <p> -->
    <!-- The following line is for the "edit" part.
        We have the ID of the campground the moment we step into this page -->
    <!-- <a href="/campgrounds/%= campground._id %>/edit">Edit</a>
    </p>
    <p>
    <form action="/campgrounds/%= campground._id %>?_method=DELETE" method="POST"> -->
    <!-- The "action" attribute connects this button to the delete route in "app.js" -->
    <!-- <button>Delete</button>
    </form>
    </p>
    <footer>
        <a href="/campgrounds">All Campgrounds</a>
    </footer> -->
    <!-- </body>

</html> -->
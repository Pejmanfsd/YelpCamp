<!-- Step 15(I): Remove all the fix parts and add the following line -->
<% layout('layouts/boilerplate') %>
    <!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Campground</title>
</head>

<body> -->
    <div class="row">
        <h1 class="text-center">New Campground</h1>
        <div class="col-6 offset-3">
            <!-- Step 21(K): Add the "novalidate" attribute and the "validated-form" for the <form> tag
                (novalidate means do not do the validation, we do it ourselves, by the <script> tag)-->
            <form action="/campgrounds" method="POST" novalidate class="validated-form" enctype="multipart/form-data">
                <!-- Step 42(A): Create an account in "cloudinary.com" then
                add the enctype="multipart/form-data" attribute in the <form> tag -->
                <div class="mb-3">
                    <!-- We want to group things under "campground"; when the data is
                    sent via POST request to our express app (server), everything in the
                    req.body will be stored under "campground". So we use (req.body.campground)
                    for creating new objects in the "POST" request,
                    because we don't want the "campground" title -->
                    <label class="form-label" for="title">Title</label>
                    <!-- Step 21(A): We want to "require" all the inputs for Creating and Editing operations
                    First visit the Bootstrap website, on the left menu in the "Forms" part click on "Validation",
                    Here we see the instructions:
                    https://getbootstrap.com/docs/5.0/forms/validation/
                    Add the "required" attribute for all the inputs of "new.ejs" and "edit.ejs" -->
                    <input class="form-control" type="text" id="title" name="campground[title]" required>
                    <!-- Step 21(O): Create a new <div> tag with the class of "valid-feedback"
                        for having a nice text after each input: -->
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="location">Location</label>
                    <!-- Step 21(B): Add the "required" attribute for all the inputs of "new.ejs" and "edit.ejs" -->
                    <input class="form-control" type="text" id="location" name="campground[location]" required>
                    <!-- Step 21(P): Create a new <div> tag with the class of "valid-feedback"
                        for having a nice text after each input: -->
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <!-- Step 20(D): Adding the "image" section, "price" section and the "description" section: -->
                <!-- <div class="mb-3">
                    <label class="form-label" for="image">Image URL</label>
                    Step 21(C): Add the "required" attribute for all the inputs of "new.ejs" and "edit.ejs"
                    <input class="form-control" type="text" id="image" name="campground[image]" required>
                    Step 21(Q): Create a new <div> tag with the class of "valid-feedback"
                        for having a nice text after each input:
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div> -->
                <!-- Step 42(B): Changing the image input form -->
                <input type="file" name="image" id="">
                <!-- install multer in Terminal: npm i multer
                then work on the "POST" route handler in "routes/campgrounds.js"
                If we want to upload multiple images, we should add the "multiple" keyword to the <input> tag:
                <input type="file" name="image" id="" multiple> -->
                <div class="mb-3">
                    <label class="form-label" for="price">Campground price</label>
                    <div class="input-group">
                        <span class="input-group-text" id="price-label">$</span>
                        <!-- Step 21(D): Add the "required" attribute for all the inputs of "new.ejs" and "edit.ejs" -->
                        <input type="text" class="form-control" id="price" placeholder="0.00" aria-label="price"
                            aria-describedby="price-label" name="campground[price]" required>
                        <!-- Step 21(R): Create a new <div> tag with the class of "valid-feedback"
                        for having a nice text after each input: -->
                        <div class="valid-feedback">
                            Looks good!
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="description">Description</label>
                    <!-- Step 21(E): Add the "required" attribute for all the inputs of "new.ejs" and "edit.ejs" -->
                    <textarea class="form-control" type="text" id="description" name="campground[description]"
                        required></textarea>
                    <!-- Step 21(S): Create a new <div> tag with the class of "valid-feedback"
                        for having a nice text after each input: -->
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
                <div class="mb-3">
                    <button class="btn btn-success">Add Campground</button>
                </div>
            </form>
            <a href="/campgrounds">All Campgrounds</a>
        </div>
    </div>
    <!-- </body>
</html> -->

    <!-- Step 21(M): In the Bootstrap web page:
https://getbootstrap.com/docs/5.0/forms/validation/
We should copy the <script> tag and paste it here
    and change the class name to "validated-form": -->
    <!-- <script>
        (function () {
            'use strict'
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.validated-form')
            // Loop over them and prevent submission
            Array.prototype.slice.call(forms) // Changing the form into an array
                .forEach(function (form) { // Looping over the array
                    form.addEventListener('submit', function (event) { // Adding an EventListener to the form
                        if (!form.checkValidity()) { // If the form is not valid
                            event.preventDefault() // Stoping the default behaviour of the form
                            event.stopPropagation() // Stoping the submiting process
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script> -->
    <!-- Step 21(Y): Move the <script> tag of the 2 pages to "boilerplate.ejs" -->